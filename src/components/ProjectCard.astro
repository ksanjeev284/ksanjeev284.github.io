---
import type { Project } from '../data/projects';

interface Props {
  project: Project;
}

const { project } = Astro.props;
const fallbackImage = "/project-images/placeholder.svg";

console.log('API Key in component:', import.meta.env.PUBLIC_SCREENSHOT_API_KEY); // Debug log

// Function to generate screenshot URL with error handling
function generateScreenshotUrl(url: string, isMobile = false, apiKey: string) {
  try {
    const params = new URLSearchParams({
      'access_key': apiKey,
      'url': url,
      'full_page': 'false',
      'format': 'jpg',
      'quality': '100',
      ...(isMobile 
        ? { 'device': 'iPhone 12 Pro' }
        : { 
            'viewport_width': '1920',
            'viewport_height': '1080',
            'device_scale_factor': '1'
          }
      )
    });
    return `https://api.screenshotone.com/take?${params}`;
  } catch (error) {
    console.error('Error generating screenshot URL:', error);
    return null;
  }
}

const screenshotUrl = generateScreenshotUrl(project.url, false, import.meta.env.PUBLIC_SCREENSHOT_API_KEY);
const mobileScreenshotUrl = generateScreenshotUrl(project.url, true, import.meta.env.PUBLIC_SCREENSHOT_API_KEY);

---

<div class="project-card">
  <div class="card-glitch"></div>
  <div class="kanji-mark">創</div>
  <div class="card-content">
    <div class="image-container">
      {project.image && <img src={project.image} alt={project.title} loading="lazy" />}
      <div class="image-overlay"></div>
    </div>
    <div class="text-content">
      <h3>
        <div class="title-container">
          <a href={project.url} target="_blank" rel="noopener noreferrer">
            {project.title}
          </a>
          <span class="hover-text">クリック</span>
        </div>
      </h3>
      <p class="description">{project.description}</p>
      {project.tags && project.tags.length > 0 && (
        <div class="tags">
          {project.tags.map((tag: string) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </div>
</div>

<style>
  .project-card {
    background: rgba(0, 0, 51, 0.7);
    backdrop-filter: blur(10px);
    border: 2px solid;
    border-image: linear-gradient(45deg, var(--accent), var(--accent-cyan)) 1;
    border-radius: 12px;
    overflow: hidden;
    position: relative;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 
      0 0 20px rgba(1, 205, 254, 0.3),
      inset 0 0 20px rgba(255, 113, 206, 0.2);
  }

  .project-card::before {
    content: "アニメ";
    position: absolute;
    top: -10px;
    left: -10px;
    font-family: 'Zen Tokyo Zoo', cursive;
    font-size: 0.8em;
    color: var(--accent-cyan);
    opacity: 0;
    transform: rotate(-45deg);
    transition: all 0.3s ease;
    text-shadow: 0 0 5px var(--accent-cyan);
    z-index: 3;
  }

  .project-card::after {
    content: "美";
    position: absolute;
    bottom: -10px;
    right: -10px;
    font-family: 'Zen Tokyo Zoo', cursive;
    font-size: 0.8em;
    color: var(--accent);
    opacity: 0;
    transform: rotate(45deg);
    transition: all 0.3s ease;
    text-shadow: 0 0 5px var(--accent);
    z-index: 3;
  }

  .project-card:hover::before,
  .project-card:hover::after {
    opacity: 0.8;
    transform: rotate(0);
  }

  .card-glitch {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg,
      var(--accent),
      var(--accent-dark),
      var(--accent-cyan));
    opacity: 0;
    z-index: 1;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .kanji-mark {
    position: absolute;
    top: 10px;
    right: 10px;
    font-family: 'Zen Tokyo Zoo', cursive;
    font-size: 2.5em;
    color: var(--accent);
    opacity: 0.3;
    z-index: 2;
    pointer-events: none;
    animation: floatKanji 4s ease-in-out infinite;
  }

  .card-content {
    position: relative;
    z-index: 2;
  }

  .image-container {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .image-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      linear-gradient(45deg, transparent 40%, rgba(255, 113, 206, 0.2) 45%, transparent 50%),
      linear-gradient(-45deg, transparent 40%, rgba(1, 205, 254, 0.2) 45%, transparent 50%);
    background-size: 300% 300%;
    animation: shimmer 3s linear infinite;
    pointer-events: none;
    z-index: 2;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      linear-gradient(180deg, transparent 0%, rgba(0, 0, 51, 0.8) 100%),
      repeating-linear-gradient(
        -45deg,
        transparent,
        transparent 5px,
        rgba(255, 113, 206, 0.1) 5px,
        rgba(255, 113, 206, 0.1) 10px
      );
    opacity: 0.5;
    transition: opacity 0.3s ease;
  }

  .text-content {
    padding: 1.5rem;
  }

  .text-content::before {
    content: "✧";
    position: absolute;
    top: 10px;
    left: 10px;
    color: var(--accent-yellow);
    opacity: 0.5;
    font-size: 1.2em;
    animation: twinkle 2s ease-in-out infinite;
  }

  .text-content::after {
    content: "✧";
    position: absolute;
    bottom: 10px;
    right: 10px;
    color: var(--accent-yellow);
    opacity: 0.5;
    font-size: 1.2em;
    animation: twinkle 2s ease-in-out infinite 1s;
  }

  .title-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
    padding-right: 4rem; /* Make space for hover text */
  }

  h3 {
    margin: 0;
    font-size: 1.4rem;
    font-family: 'Press Start 2P', cursive;
    line-height: 1.4;
    position: relative;
  }

  h3 a {
    color: var(--accent-yellow);
    text-decoration: none;
    text-shadow: 2px 2px var(--accent-dark);
    transition: all 0.3s ease;
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: 100%;
  }

  .hover-text {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.8em;
    color: var(--accent-cyan);
    opacity: 0;
    transition: all 0.3s ease;
    font-family: 'Zen Tokyo Zoo', cursive;
    white-space: nowrap;
    pointer-events: none;
    text-shadow: 0 0 5px var(--accent-cyan);
    background: rgba(0, 0, 51, 0.8);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    animation: pulse 2s ease-in-out infinite;
  }

  .project-card:hover .hover-text {
    opacity: 1;
  }

  .description {
    color: #fff;
    font-size: 1rem;
    margin: 1rem 0;
    font-family: 'VT323', monospace;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag {
    position: relative;
    background: linear-gradient(45deg, var(--accent-dark), var(--accent));
    color: #fff;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-family: 'VT323', monospace;
    transition: all 0.3s ease;
    box-shadow: 0 0 10px rgba(1, 205, 254, 0.2);
    overflow: hidden;
  }

  .tag::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transform: rotate(45deg);
    animation: shine 3s ease-in-out infinite;
    pointer-events: none;
  }

  @keyframes shimmer {
    0% { background-position: 100% 100%; }
    100% { background-position: 0% 0%; }
  }

  @keyframes twinkle {
    0%, 100% { opacity: 0.5; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }

  @keyframes shine {
    0% { transform: translateX(-100%) rotate(45deg); }
    100% { transform: translateX(100%) rotate(45deg); }
  }

  @keyframes pulse {
    0%, 100% { text-shadow: 0 0 5px var(--accent-cyan); }
    50% { text-shadow: 0 0 15px var(--accent-cyan), 0 0 30px var(--accent); }
  }

  /* Hover Effects */
  .project-card:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow: 
      0 0 30px rgba(1, 205, 254, 0.5),
      inset 0 0 30px rgba(255, 113, 206, 0.3),
      0 0 50px rgba(255, 113, 206, 0.2);
  }

  .project-card:hover .card-glitch {
    opacity: 0.1;
    animation: glitch 0.3s cubic-bezier(.25, .46, .45, .94) both infinite;
  }

  .project-card:hover .image-container img {
    transform: scale(1.1);
  }

  .project-card:hover .image-overlay {
    opacity: 0.7;
  }

  .project-card:hover .image-container::before {
    animation: shimmer 2s linear infinite;
  }

  .project-card:hover .kanji-mark {
    animation: floatKanji 2s ease-in-out infinite;
    opacity: 0.8;
  }

  .project-card:hover h3 a {
    color: var(--accent-cyan);
    text-shadow: 0 0 10px var(--accent-cyan);
  }

  .tag:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 15px rgba(1, 205, 254, 0.4);
    background: linear-gradient(45deg, var(--accent), var(--accent-cyan));
  }

  @keyframes floatKanji {
    0% { transform: translateY(0) rotate(0deg); opacity: 0.3; }
    50% { transform: translateY(-5px) rotate(5deg); opacity: 0.6; }
    100% { transform: translateY(0) rotate(0deg); opacity: 0.3; }
  }

  @keyframes glitch {
    0% {
      clip-path: polygon(0 2%, 100% 2%, 100% 5%, 0 5%);
      transform: translate(0);
    }
    20% {
      clip-path: polygon(0 15%, 100% 15%, 100% 15%, 0 15%);
      transform: translate(-5px);
    }
    30% {
      clip-path: polygon(0 10%, 100% 10%, 100% 20%, 0 20%);
      transform: translate(5px);
    }
    40% {
      clip-path: polygon(0 1%, 100% 1%, 100% 2%, 0 2%);
      transform: translate(-5px);
    }
    50% {
      clip-path: polygon(0 33%, 100% 33%, 100% 33%, 0 33%);
      transform: translate(0);
    }
    55% {
      clip-path: polygon(0 44%, 100% 44%, 100% 44%, 0 44%);
      transform: translate(5px);
    }
    60% {
      clip-path: polygon(0 50%, 100% 50%, 100% 20%, 0 20%);
      transform: translate(-5px);
    }
    100% {
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
      transform: translate(0);
    }
  }

  /* Mobile Responsiveness */
  @media (max-width: 768px) {
    .project-card {
      margin: 1rem 0;
    }

    .image-container {
      height: 150px;
    }

    .text-content {
      padding: 1rem;
    }

    h3 {
      font-size: 1.1rem;
    }

    .description {
      font-size: 0.9rem;
      margin: 0.8rem 0;
      -webkit-line-clamp: 2;
    }

    .tags {
      margin-top: 0.8rem;
    }

    .tag {
      font-size: 0.8rem;
      padding: 0.2rem 0.6rem;
    }

    .kanji-mark {
      font-size: 2em;
      top: 5px;
      right: 5px;
    }

    .title-container {
      padding-right: 3rem;
    }

    .hover-text {
      font-size: 0.7em;
    }

    .project-card::before,
    .project-card::after {
      font-size: 0.7em;
    }

    .text-content::before,
    .text-content::after {
      font-size: 1em;
    }
  }

  /* Small mobile devices */
  @media (max-width: 480px) {
    .project-card {
      margin: 0.8rem 0;
    }

    .image-container {
      height: 120px;
    }

    .text-content {
      padding: 0.8rem;
    }

    h3 {
      font-size: 1rem;
    }

    .description {
      font-size: 0.8rem;
      margin: 0.6rem 0;
    }

    .tags {
      margin-top: 0.6rem;
      gap: 0.3rem;
    }

    .tag {
      font-size: 0.7rem;
      padding: 0.2rem 0.5rem;
    }

    .kanji-mark {
      display: none;
    }

    .hover-text {
      display: none;
    }

    .title-container {
      padding-right: 0;
    }

    .project-card::before,
    .project-card::after,
    .text-content::before,
    .text-content::after {
      display: none;
    }
  }

  /* Prevent hover effects on touch devices */
  @media (hover: none) {
    .project-card:hover {
      transform: none;
    }

    .project-card:active {
      transform: scale(0.98);
      transition: transform 0.1s;
    }

    .image-container img {
      transform: none !important;
    }

    .card-glitch,
    .hover-text {
      display: none;
    }

    .tag:hover {
      transform: none;
    }

    .tag:active {
      transform: scale(0.95);
    }
  }

  /* Prefers reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .project-card,
    .image-container img,
    .kanji-mark,
    .hover-text,
    .tag {
      animation: none;
      transition: none;
    }

    .project-card:hover .image-container img {
      transform: none;
    }

    .project-card::before,
    .project-card::after,
    .image-container::before,
    .tag::before,
    .text-content::before,
    .text-content::after {
      animation: none;
    }
  }
</style>