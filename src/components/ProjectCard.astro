---
import type { Project } from '../data/projects';

interface Props {
  project: Project;
}

const { project } = Astro.props;
const fallbackImage = "/project-images/placeholder.svg";

console.log('API Key in component:', import.meta.env.PUBLIC_SCREENSHOT_API_KEY); // Debug log

// Function to generate screenshot URL with error handling
function generateScreenshotUrl(url: string, isMobile = false, apiKey: string) {
  try {
    const params = new URLSearchParams({
      'access_key': apiKey,
      'url': url,
      'full_page': 'false',
      'format': 'jpg',
      'quality': '100',
      ...(isMobile 
        ? { 'device': 'iPhone 12 Pro' }
        : { 
            'viewport_width': '1920',
            'viewport_height': '1080',
            'device_scale_factor': '1'
          }
      )
    });
    return `https://api.screenshotone.com/take?${params}`;
  } catch (error) {
    console.error('Error generating screenshot URL:', error);
    return null;
  }
}

const screenshotUrl = generateScreenshotUrl(project.url, false, import.meta.env.PUBLIC_SCREENSHOT_API_KEY);
const mobileScreenshotUrl = generateScreenshotUrl(project.url, true, import.meta.env.PUBLIC_SCREENSHOT_API_KEY);

---

<div class="project-card">
  <div class="project-image">
    <img 
      src={project.image} 
      alt={`${project.title} preview`}
      onerror={`this.onerror=null; this.src='${fallbackImage}'`}
      class="main-image"
      loading="lazy"
    />
  </div>
  <div class="project-content">
    <h3>{project.title}</h3>
    <p>{project.description}</p>
    <div class="tags">
      {project.tags.map(tag => (
        <span class="tag">{tag}</span>
      ))}
    </div>
    <a href={project.url} target="_blank" rel="noopener noreferrer" class="view-project">
      View Project
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
        <polyline points="15 3 21 3 21 9"></polyline>
        <line x1="10" y1="14" x2="21" y2="3"></line>
      </svg>
    </a>
  </div>
</div>

<style>
  .project-card {
    background: white;
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    transform: translateY(-5px);
  }

  .project-image {
    position: relative;
    width: 100%;
    padding-top: 56.25%; /* 16:9 aspect ratio */
    overflow: hidden;
  }

  .main-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .project-card:hover .main-image {
    transform: scale(1.05);
  }

  .project-content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  h3 {
    margin: 0 0 0.5rem 0;
    color: var(--accent);
    font-size: 1.25rem;
  }

  p {
    margin: 0 0 1rem 0;
    color: #666;
    font-size: 0.95rem;
    line-height: 1.5;
    flex-grow: 1;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }

  .tag {
    background: var(--accent-light);
    color: var(--accent-dark);
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.85rem;
  }

  .view-project {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--accent);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
    margin-top: auto;
  }

  .view-project:hover {
    color: var(--accent-dark);
  }
</style>